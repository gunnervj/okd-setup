global
    log /dev/log local0
    log /dev/log local1 notice
    daemon
    maxconn 2048
    tune.ssl.default-dh-param 2048

defaults
    log     global
    mode    tcp
    option  tcplog
    timeout connect 10s
    timeout client  1m
    timeout server  1m


# === Frontend for all 6443 traffic  ===
frontend okd-api
    bind 192.168.1.58:6443
    mode tcp
    option tcplog
    acl allowed_lan src 192.168.1.0/24
    tcp-request connection reject if !allowed_lan
    default_backend masters-api

# === API Backend ===
backend masters-api
    mode tcp
    option tcp-check
    balance source
    server okd-services 192.168.122.2:6443 check

# === Frontend for all 443 traffic using SNI ===
frontend okd-https
    bind 192.168.1.58:443
    mode tcp
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }

    use_backend console_tls if { req.ssl_sni -i console-openshift-console.apps.lab.okd.local }
    use_backend oauth_tls if { req.ssl_sni -i oauth-openshift.apps.lab.okd.local }
    use_backend kong_manager_tls if { req.ssl_sni -i kongmanager.blocksafe.home }
    use_backend kong_gateway_tls if { req.ssl_sni -i kuma.blocksafe.home }
    default_backend kong_gateway_tls


# === Frontend for all 8444 kong-admin traffic  ===
frontend kong-admin
    bind 192.168.1.58:8444
    mode tcp
    option tcplog
    acl allowed_lan src 192.168.1.0/24
    tcp-request connection reject if !allowed_lan
    default_backend kong_admin_tls

# === PostgreSQL for apps ===
frontend pgpool_frontend
    bind 192.168.1.58:5432
    mode tcp
    acl allowed_lan src 192.168.1.0/24
    http-request deny if !allowed_lan
    default_backend pgpool_backend

# === OKD Console Backend ===
backend console_tls
    mode tcp
    server console1 192.168.122.2:443 check

# === OKD OAuth Backend ===
backend oauth_tls
    mode tcp
    server oauth1 192.168.122.2:443 check

# === PGPool Backend
backend pgpool_backend
    server pgpool 192.168.122.101:5432 check

# === Kong TLS Backend
backend kong_tls
    mode tcp
    server kong 192.168.122.100:443 check

# === kong_manager_tls Backend
backend kong_manager_tls
    mode tcp
    server kong-manager 192.168.122.102:443 check

# === kong_admin_tls Backend
backend kong_admin_tls
    mode tcp
    server admin-api 192.168.122.103:443 check

# === kong_gateway_tls Backend
backend kong_gateway_tls
    mode tcp
    server kong 192.168.122.100:443 check